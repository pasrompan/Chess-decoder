# Multi-stage build for production
FROM mcr.microsoft.com/dotnet/aspnet:9.0-alpine AS base
WORKDIR /app
EXPOSE 8080

# Install required packages for SQLite
RUN apk add --no-cache sqlite

# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0-alpine AS build
WORKDIR /src
COPY ["ChessDecoderApi.csproj", "./"]
RUN dotnet restore "ChessDecoderApi.csproj"
COPY . .
RUN dotnet build "ChessDecoderApi.csproj" -c Release -o /app/build

# Publish stage
FROM build AS publish
RUN dotnet publish "ChessDecoderApi.csproj" -c Release -o /app/publish

# Production stage
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# Create data directory for SQLite
RUN mkdir -p /app/data

# Set environment variables for production
ENV ASPNETCORE_URLS=http://+:${PORT:-8080}
ENV ASPNETCORE_ENVIRONMENT=Production
ENV PORT=8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT:-8080}/api/test/health || exit 1

ENTRYPOINT ["dotnet", "ChessDecoderApi.dll"]
